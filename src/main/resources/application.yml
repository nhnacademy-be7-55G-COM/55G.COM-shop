spring:
  profiles:
    active: default

  application:
    name: shop-service

  config:
    import: optional:configserver:http://localhost:9000

  cloud:
    config:
      label: main

  rabbitmq:
    host: host
    port: 0
    username: username
    password: password

  elasticsearch:
    url: url
    username: username
    password: password

  data:
    elasticsearch:
      repositories:
        enabled: true

redis:
  host: host
  port: 1
  password: password

rabbit:
  retry-count: 5
  exchange:
    orders: 55g.orders.exchange
    coupons: 55g.coupon.exchange

  route:
    orders:
      payment:
        toss: 55g.orders.payment.toss
    coupons:
      event: 55g.coupon.create

  orders:
    payment:
      toss:
        queue: 55g.orders.payment.queue
        dlq: 55g.orders.payment.queue.dlq

  coupon:
    event:
      create:
        queue: 55g.coupon.create.queue
        dlq: 55g.coupon.create.queue.dlq

  category:
    event:
      coupon:
        create:
          queue: 55g.category.coupon.create.queue
          dlq: 55g.category.coupon.create.queue.dlq


management:
  endpoints:
    web:
      exposure:
        include: refresh,busrefresh,health

payment:
  toss:
    secretkey: secret

---
spring:
  config:
    activate:
      on-profile: live

    import: optional:configserver:http://55g-config-live:9000

---
# on profile 'dev'
spring:
  config:
    activate:
      on-profile: dev

    import: optional:configserver:http://55g-config-dev:9050

rabbit:
  retry-count: 5
  exchange:
    coupons: 55g.coupon.test.exchange

  route:
    coupons:
      event: 55g.coupon.test

  coupon:
    event:
      create:
        queue: 55g.coupon.test.queue
        dlq: 55g.coupon.test.dlq

---
# on profile 'docker'
spring:
  config:
    activate:
      on-profile: docker

---
spring:
  config:
    activate:
      on-profile: embed-db

  jpa:
    database: h2
---
spring:
  config:
    activate:
      on-profile: local

rabbit:
  orders:
    payment:
      toss:
        queue: 55g.dev.orders.payment.queue
---
spring:
  config:
    activate:
      on-profile: test
  jpa:
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        generate_statistics: true
        use_sql_comments: true
        highlight_sql: true
  cloud:
    openfeign:
      client:
        config:
          default:
            logger-level: full

rabbit:
  orders:
    payment:
      toss:
        queue: 55g.dev.f3fort.orders.payment.queue

---
spring:
  config:
    activate:
      on-profile: local-db-ws

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/55g
    username: root
    password:

---
spring:
  config:
    activate:
      on-profile: disable-redis

  # elasticsearch가 레포지토리 기능을 비활성화
  data:
    elasticsearch:
      repositories:
        enabled: false